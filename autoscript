EDITOR=nano

waitakey() { 
echo
echo "press a key":44
read key
}

apt-get install nginx
apt-get install nginx
apt-get install php5-common php5-fpm php5-cli php5-json php5-mysql php5-curl php5-intl php5-mcrypt php5-memcache php-xml-parser php-pear
mkdir -p /etc/ssl/nginx/

echo "upstream php-handler {
  server 127.0.0.1:9000;
  #server unix:/var/run/php5-fpm.sock;
  }" > /etc/nginx/sites-enabled/php-fpm

echo "server {
  listen 80;
  server_name _;
  root /var/www/html;
  index index.html;

  }" > /etc/nginx/sites-enabled/default
  
service nginx restart

#TOR
apt-get install tor
service tor stop
mkdir -p /var/lib/tor/hidden_service/{yacy,owncloud,prosody,friendica,box}
chown debian-tor:debian-tor /var/lib/tor/hidden_service/{yacy,owncloud,prosody,friendica,box} -R

echo "Change RUN_DAEMON to yes"
waitakey
nano /etc/default/tor 

rm -f /etc/tor/torrc
cp /usr/share/tor/tor-service-defaults-torrc /etc/tor/torrc

echo "
HiddenServiceDir /var/lib/tor/hidden_service/yacy
HiddenServicePort 80 127.0.0.1:8090

HiddenServiceDir /var/lib/tor/hidden_service/owncloud
HiddenServicePort 80 127.0.0.1:7070
HiddenServicePort 443 127.0.0.1:443

HiddenServiceDir /var/lib/tor/hidden_service/friendica
HiddenServicePort 80 127.0.0.1:8181
HiddenServicePort 443 127.0.0.1:443

HiddenServiceDir /var/lib/tor/hidden_service/prosody
HiddenServicePort 5222 127.0.0.1:5222
HiddenServicePort 5269 127.0.0.1:5269


DNSPort   9053
DNSListenAddress 10.0.0.1
VirtualAddrNetworkIPv4 10.192.0.0/16
AutomapHostsOnResolve 1
TransPort 9040
TransListenAddress 10.0.0.1
SocksPort 9050 # what port to open for local application connectio$
SocksBindAddress 127.0.0.1 # accept connections only from localhost
AllowUnverifiedNodes middle,rendezvous
#Log notice syslog" >>  /etc/tor/torrc 


service tor start

sleep 5

#i2p
apt-get install i2p

echo "Change RUN_DAEMON to true"
waitakey
nano /etc/default/i2p

#unbound
apt-get install unbound

echo '# Unbound configuration file for Debian.
#
# See the unbound.conf(5) man page.
#
# See /usr/share/doc/unbound/examples/unbound.conf for a commented
# reference config file.

server:
    # The following line will configure unbound to perform cryptographic
    # DNSSEC validation using the root trust anchor.
    interface: 0.0.0.0
    access-control: 10.0.0.0/8 allow
    access-control: 127.0.0.1/8 allow
    access-control: 0.0.0.0/0 refuse
#    access-control
#    auto-trust-anchor-file: "/var/lib/unbound/root.key"
    do-not-query-localhost: no
#domain-insecure: "onion"
#private-domain: "onion"

#Local destinations
local-zone: "local." static
local-data: "communitycube.local. IN A 10.0.0.1"' > /etc/unbound/unbound.conf 

for i in $(ls /var/lib/tor/hidden_service/)
do

cat << EOF >>  /etc/unbound/unbound.conf 
local-data: "$i.local.  IN A 10.0.0.1"
EOF

done

for i in $(ls /var/lib/tor/hidden_service/)
do

hn="$(cat /var/lib/tor/hidden_service/$i/hostname 2>/dev/null)"

if [ -n "$hn" ]; then
cat << EOF >>  /etc/unbound/unbound.conf 

local-zone: "$hn." static
local-data: "$hn. IN A 10.0.0.1"
EOF

fi

done

echo '
#I2P domains
local-zone: "i2p" redirect
local-data: "i2p A 10.191.0.1"

#Forward rest of zones to TOR
forward-zone:
    name: "."
    forward-addr: 10.0.0.1@9053' >> /etc/unbound/unbound.conf 

service unbound restart

#owncloud
apt-get install owncloud apache2-mpm-prefork- apache2-utils- apache2.2-bin- apache2.2-common-

echo "Change to"
echo "  listen = localhost:9000"
waitakey
$EDITOR /etc/php5/fpm/pool.d/www.conf 

echo "Change upload_max_filesize and post_max_size to 2000M"
waitakey 
$EDITOR  /etc/php5/fpm/php.ini /etc/php5/cli/php.ini 

onion=`cat /var/lib/tor/hidden_service/owncloud/hostname`

cat << EOF > /etc/nginx/sites-enabled/owncloud 
server {
  listen $onion:80;
  server_name $onion;
  return 301 https://\$server_name\$request_uri;
  }
  

server {
  listen $onion:7070;
  server_name $onion;
  return 301 https://\$server_name\$request_uri;
  }

server {
  listen $onion:443;
  ssl on;
  server_name $onion;
  ssl_certificate /etc/ssl/nginx/$onion.crt;
  ssl_certificate_key /etc/ssl/nginx/$onion.key;

  # Path to the root of your installation
  root /var/www/owncloud/;
  # set max upload size
  client_max_body_size 10G;
  fastcgi_buffers 64 4K;

  rewrite ^/caldav(.*)\$ /remote.php/caldav\$1 redirect;
  rewrite ^/carddav(.*)\$ /remote.php/carddav\$1 redirect;
  rewrite ^/webdav(.*)\$ /remote.php/webdav\$1 redirect;

  index index.php;
  error_page 403 /core/templates/403.php;
  error_page 404 /core/templates/404.php;

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
    }

  location ~ ^/(?:\.htaccess|data|config|db_structure\.xml|README){
    deny all;
    }

  location / {
   # The following 2 rules are only needed with webfinger
   rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
   rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

   rewrite ^/.well-known/carddav /remote.php/carddav/ redirect;
   rewrite ^/.well-known/caldav /remote.php/caldav/ redirect;

   rewrite ^(/core/doc/[^\/]+/)\$ \$1/index.html;

   try_files \$uri \$uri/ /index.php;
   }

   location ~ \.php(?:\$|/) {
   fastcgi_split_path_info ^(.+\.php)(/.+)\$;
   include fastcgi_params;
   fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
   fastcgi_param PATH_INFO \$fastcgi_path_info;
   fastcgi_param HTTPS on;
   fastcgi_pass php-handler;
   }

   # Optional: set long EXPIRES header on static assets
   location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|css|js|swf)\$ {
       expires 30d;
       # Optional: Don't log access to assets
         access_log off;
   }

  }
EOF

if [ ! -e /etc/ssl/nginx/$onion.key -o ! -e /etc/ssl/nginx/$onion.csr -o ! -e  /etc/ssl/nginx/$onion.crt ]; then
    openssl genrsa -des3 -out /etc/ssl/nginx/$onion.key 2048
    openssl req -new -key /etc/ssl/nginx/$onion.key -out /etc/ssl/nginx/$onion.csr
    cp /etc/ssl/nginx/$onion.key /etc/ssl/nginx/$onion.key.org
    openssl rsa -in /etc/ssl/nginx/$onion.key.org -out /etc/ssl/nginx/$onion.key
    openssl x509 -req -days 365 -in /etc/ssl/nginx/$onion.csr -signkey /etc/ssl/nginx/$onion.key -out /etc/ssl/nginx/$onion.crt
fi

service php5-fpm restart
service nginx restart

#Java
apt-get install openjdk-7-jre-headless

#Yacy
echo "On ask, 300Mb"
waitakey
apt-get install yacy


cat << EOF > /etc/nginx/sites-enabled/i2p 
server {
        listen i2p.local:7656;
        server_name _;


location / {
    proxy_pass       http://127.0.0.1:7657;
    proxy_set_header Host      \$host;
    proxy_set_header X-Real-IP \$remote_addr;
  }

}
EOF

service nginx restart


#html
mkdir -p /var/www/html
rm -f /var/www/html/index.html
for i in $(ls /var/lib/tor/hidden_service/)
do

hn="$(cat /var/lib/tor/hidden_service/$i/hostname 2>/dev/null)"

cat << EOF >> /var/www/html/index.html
<a href="http://$hn">$i</a>
EOF
done